# Import necessary components from Qiskit
from qiskit import QuantumCircuit, Aer, execute
from qiskit.visualization import plot_histogram
from qiskit.providers.aer import AerSimulator

# Create a Quantum Circuit with 2 qubits and 2 classical bits
circuit = QuantumCircuit(2, 2)

# Apply a Hadamard gate to the first qubit
circuit.h(0)

# Apply a CNOT gate with qubit 0 as control and qubit 1 as target
circuit.cx(0, 1)

# Measure the qubits
circuit.measure([0,1], [0,1])

# Simulate the circuit
simulator = Aer.get_backend('aer_simulator')
compiled_circuit = transpile(circuit, simulator)
job = simulator.run(compiled_circuit, shots=1000)
result = job.result()

# Get the counts (result) of 00, 01, 10, and 11 states
counts = result.get_counts(circuit)

# Display the result as a histogram
print(counts)
plot_histogram(counts)
